import boto3
import json
import sys
from medical_safety import MedicalSafetyGuardrails

class GlucoMateBot:
    def __init__(self):
        self.bedrock_client = boto3.client('bedrock-runtime', region_name='us-east-1')
        self.safety = MedicalSafetyGuardrails()
        self.model_id = "amazon.titan-text-premier-v1:0"
    
    def call_bedrock_model(self, prompt):
        try:
            body = {
                "inputText": prompt,
                "textGenerationConfig": {
                    "maxTokenCount": 2048,
                    "temperature": 0.1,
                    "topP": 0.9,
                    "stopSequences": []
                }
            }
            
            response = self.bedrock_client.invoke_model(
                modelId=self.model_id,
                body=json.dumps(body),
                contentType='application/json'
            )
            
            response_body = json.loads(response['body'].read())
            return response_body['results'][0]['outputText']
            
        except Exception as e:
            return f"Error calling Bedrock: {str(e)}"
    
    def create_diabetes_prompt(self, user_question, language="English"):
        prompt = f"""You are GlucoMate, an AI assistant specialized in diabetes care and education. You provide accurate, evidence-based information about diabetes management.

User Question: {user_question}
Response Language: {language}

Guidelines for your response:
1. Provide accurate, evidence-based diabetes information
2. Be empathetic and supportive
3. Use simple, clear language
4. Include practical actionable advice when appropriate
5. Always emphasize the importance of healthcare provider consultation
6. If discussing medications, mention the need for doctor supervision
7. For nutrition advice, provide general guidelines

Respond in {language}:"""
        
        return prompt
    
    def chat(self, user_input, language="English"):
        # Check for emergency situations
        safety_check = self.safety.check_emergency_situation(user_input)
        
        if safety_check['is_emergency']:
            return safety_check['message']
        
        # Generate diabetes-specific prompt
        prompt = self.create_diabetes_prompt(user_input, language)
        
        # Get response from Bedrock
        response = self.call_bedrock_model(prompt)
        
        # Add safety disclaimer
        safe_response = self.safety.add_medical_disclaimer(response)
        
        # Add warning if needed
        if safety_check['urgency_level'] == 'HIGH':
            safe_response = safety_check['message'] + "\n\n" + safe_response
        
        return safe_response

def main():
    bot = GlucoMateBot()
    
    print("ðŸ©º Welcome to GlucoMate - Your Diabetes Care Assistant")
    print("Ask me anything about diabetes management, nutrition, or medications!")
    print("Type 'quit' to exit\n")
    
    while True:
        user_input = input("You: ")
        
        if user_input.lower() in ['quit', 'exit', 'bye']:
            print("GlucoMate: Take care! Remember to monitor your blood sugar regularly. ")
            break
        
        if user_input.strip():
            response = bot.chat(user_input)
            print(f"\nGlucoMate: {response}\n")
            print("-" * 50)

if __name__ == "__main__":
    main()
